static void level40Test(){

    typedef GameBoard< List<
            List < BoardCell<O, DOWN, 3>     , BoardCell<A, RIGHT, 2>    , BoardCell<A, RIGHT, 2>, BoardCell<EMPTY, UP, 3>, BoardCell< B , DOWN , 2>,  BoardCell< EMPTY, RIGHT , 0>>,
            List < BoardCell<O, DOWN, 3>     , BoardCell<C,    UP, 2>    , BoardCell<D, DOWN,  2>, BoardCell<EMPTY, UP, 3>, BoardCell< B , DOWN ,2 >,  BoardCell< P, UP ,        3>>,
            List < BoardCell<O, DOWN, 3>     , BoardCell<C,    UP, 2>    , BoardCell<D, DOWN,  2>, BoardCell<X,  RIGHT, 2>, BoardCell< X,  RIGHT, 2>,  BoardCell< P ,    UP,     3>>,
            List < BoardCell<Q, RIGHT,3>     , BoardCell<Q, RIGHT, 3>    , BoardCell<Q, RIGHT, 3>, BoardCell<E ,  UP  , 2>, BoardCell< EMPTY, UP, 0>,  BoardCell< P,     UP ,    3>>,
            List < BoardCell<EMPTY, RIGHT,0> , BoardCell<EMPTY, DOWN , 2>, BoardCell<F, UP ,   2>, BoardCell<E,   UP  , 2>, BoardCell< K, RIGHT , 2>,  BoardCell< K , RIGHT ,    2>>,
            List < BoardCell<H, RIGHT, 2>    , BoardCell<H, RIGHT, 2>    , BoardCell<F, UP    ,2>, BoardCell<I, RIGHT , 2>, BoardCell< I, RIGHT , 2>,  BoardCell< EMPTY, RIGHT , 2>>
    > > gameBoard;

    typedef List<
            Move < P, UP,  1 > ,   Move < I, RIGHT,  1 > , Move < E, DOWN, 1 > , Move < Q, RIGHT, 3 > ,
            Move < F, UP, 1 > , Move < H, RIGHT,   1 > , Move < O, DOWN,  3 > , Move < A, LEFT,   1 > ,
            Move < D, UP,  1 > , Move < C, DOWN, 2 > , Move < X, LEFT,  3 > , Move < B, DOWN, 1 > ,Move < D, DOWN, 1> ,Move < A, RIGHT,3> , Move < D, UP, 1> , Move < X, RIGHT, 2> ,
            Move < O, UP, 3> , Move < H, LEFT,1 > ,Move < F,DOWN ,1 > , Move < C, UP, 3> , Move < Q, LEFT, 3> , Move < P,DOWN ,1 > ,Move < X, LEFT, 1> , Move < A,RIGHT ,1 > ,
            Move < E, UP, 4> , Move < Q,RIGHT ,2 > , Move < X, RIGHT,1 > , Move < C,DOWN ,3 > , Move < X, LEFT, 1> , Move < E, DOWN,1 > , Move < A,LEFT ,1 > ,
            Move < P,UP ,1 > , Move < Q, RIGHT,1 > , Move < F,UP ,1 > , Move < H,RIGHT ,1 > , Move < O,DOWN ,3 > , Move < X, LEFT, 1> , Move < D,DOWN ,1 > , Move < A, LEFT,3 > ,
            Move < B, UP, 1> , Move < E,UP ,1 > , Move < D, UP ,1 > , Move < X,RIGHT ,3 > ,Move < O, UP, 1> ,Move < H,LEFT ,1 > , Move < F,DOWN ,1 > , Move < I, LEFT, 1> ,
            Move < K, LEFT,1 > , Move < Q, LEFT,1 > ,Move < P, DOWN, 3>, Move < X, LEFT, 2>, Move < X, RIGHT, 1>
    > moves;

    static_assert(CheckSolution<gameBoard, moves>::result, "Fail");
}